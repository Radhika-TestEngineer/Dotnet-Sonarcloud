# .github/workflows/sonarcloud.yml
name: SonarCloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          dotnet sonarscanner begin \
            /k:"Dotnet-Sonarcloud" \
            /o:"radhika-testengineer" \
            /d:sonar.host.url="${SONAR_HOST_URL}" \
            /d:sonar.scanner.sonarcloudUrl="${SONAR_HOST_URL}" \
            /d:sonar.login="${SONAR_TOKEN}"

      - name: Build & Test
        run: |
          dotnet restore
          dotnet build -c Release --no-restore
          dotnet test -c Release --no-build \
            --collect:"XPlat Code Coverage" \
            --results-directory ./coverage

      - name: End SonarCloud
        if: always()
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner end /d:sonar.login="${SONAR_TOKEN}"
